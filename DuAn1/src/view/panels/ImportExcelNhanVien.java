/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.panels;

import ultilities.DBConnect;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import ultilities.MsgBox;

/**
 *
 * @author Administrator
 */
public class ImportExcelNhanVien extends javax.swing.JFrame {

    DefaultTableModel dtm;

    /**
     * Creates new form ImportExcelNhanVien
     */
    public ImportExcelNhanVien() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbExcel = new com.raven.suportSwing.TableColumn();
        btnImportExcel = new com.raven.suportSwing.MyButton();
        btnSave = new com.raven.suportSwing.MyButton();
        btnBack = new com.raven.suportSwing.MyButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        tbExcel.setBackground(new java.awt.Color(255, 255, 255));
        tbExcel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbExcel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã", "Tên", "Giới tính", "Ngày sinh", "SĐT", "Địa Chỉ", "Email", "CCCD", "Chức vụ", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbExcelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbExcel);

        btnImportExcel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnImportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/Download.png"))); // NOI18N
        btnImportExcel.setText("Import Excel");
        btnImportExcel.setBorderColor(new java.awt.Color(100, 149, 237));
        btnImportExcel.setColorClick(new java.awt.Color(100, 149, 237));
        btnImportExcel.setColorOver(new java.awt.Color(238, 244, 244));
        btnImportExcel.setRadius(10);
        btnImportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportExcelActionPerformed(evt);
            }
        });

        btnSave.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/Save.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorderColor(new java.awt.Color(100, 149, 237));
        btnSave.setColorClick(new java.awt.Color(100, 149, 237));
        btnSave.setColorOver(new java.awt.Color(238, 244, 244));
        btnSave.setRadius(10);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/Exit button.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorderColor(new java.awt.Color(100, 149, 237));
        btnBack.setColorClick(new java.awt.Color(100, 149, 237));
        btnBack.setColorOver(new java.awt.Color(238, 244, 244));
        btnBack.setRadius(10);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE)
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(btnImportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void tbExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbExcelMouseClicked

    }//GEN-LAST:event_tbExcelMouseClicked

    private void btnImportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportExcelActionPerformed
        // TODO add your handling code here:
        dtm = (DefaultTableModel) tbExcel.getModel();
        dtm.setRowCount(0);
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportWorkBook = null;
        String currentDirectoryPath = "C:\\Users\\Admin\\Desktop\\ExcelPM";
        JFileChooser ejfc = new JFileChooser(currentDirectoryPath);
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Excel file", "xls", "xlsx", "xslm");
        ejfc.setFileFilter(extensionFilter);
        int excelchooser = ejfc.showOpenDialog(null);
        if (excelchooser == JFileChooser.APPROVE_OPTION) {
            try {
                File excelFile = ejfc.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportWorkBook = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportWorkBook.getSheetAt(0);

                for (Row row : excelSheet) {
                    Object[] rowData = new Object[row.getLastCellNum()];
                    for (Cell cell : row) {
                        int columnIndex = cell.getColumnIndex();
                        CellType cellType = cell.getCellType();

                        // Nếu là dữ liệu hàng, thêm dữ liệu vào rowData
                        if (cellType == CellType.STRING) {
                            rowData[columnIndex] = cell.getStringCellValue();
                        } else if (cellType == CellType.NUMERIC) {
                            rowData[columnIndex] = cell.getNumericCellValue();
                        } else if (cellType == CellType.BOOLEAN) {
                            rowData[columnIndex] = cell.getBooleanCellValue();
                        }

                    }
                    if (row.getRowNum() != -1) {
                        // Thêm rowData vào table model
                        dtm.addRow(rowData);
                    }
                }

                /*   for (int i = 0; i < excelSheet.getLastRowNum(); i++) {
                    XSSFRow excelRow = excelSheet.getRow(i);
                    XSSFCell maNV = excelRow.getCell(0);
                    XSSFCell ten = excelRow.getCell(1);
                    XSSFCell SDT = excelRow.getCell(2);
                    XSSFCell email = excelRow.getCell(3);
                    XSSFCell diaChi = excelRow.getCell(4);
                    XSSFCell gioiTinh = excelRow.getCell(5);
                    XSSFCell ngaySinh = excelRow.getCell(6);
                    XSSFCell trangThai = excelRow.getCell(7);

                    System.out.println();
                    dtm.addRow(new Object[]{maNV, ten, SDT, email, diaChi, gioiTinh, ngaySinh, trangThai});
                }*/
                MsgBox.alert(this, "Import Excel thành công");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                Logger.getLogger(ImportExcelNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnImportExcelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int insertedRows = 0;
        int row = tbExcel.getRowCount();
        String query = "INSERT INTO [dbo].[nhan_vien]\n"
                + "           ([ma]\n"
                + "           ,[ten]\n"
                + "           ,[gioi_tinh]\n"
                + "           ,[ngay_sinh]\n"
                + "           ,[sdt]\n"
                + "           ,[dia_chi]\n"
                + "           ,[email]\n"
                + "           ,[cccd]\n"
                + "           ,[id_chuc_vu]\n"
                + "           ,[trang_thai])\n"
                + "     VALUES\n"
                + "           (?,?,?,?,?,?,?,?,?,?)";
        PreparedStatement ps = null;
        Connection con = DBConnect.getConnection();
        for (int i = 0; i < row; i++) {
            String maNV = dtm.getValueAt(i, 1).toString();
            String ten = dtm.getValueAt(i, 2).toString();
            String gioiTinh = dtm.getValueAt(i, 3).toString();
            String ngaySinh = dtm.getValueAt(i, 4).toString();
            String SDT = dtm.getValueAt(i, 5).toString();
            String diaChi = dtm.getValueAt(i, 6).toString();
            String email = dtm.getValueAt(i, 7).toString();
            String cccd = dtm.getValueAt(i, 8).toString();
            String chucVu = dtm.getValueAt(i, 9).toString();
            String trangThai = dtm.getValueAt(i, 10).toString();

            /* DateTimeFormatter formatter1 = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate localDate1 = LocalDate.parse(ngaySinh, formatter1);
            java.sql.Date ngayThangs = java.sql.Date.valueOf(localDate1);*/

 /* boolean sex;
            if (Boolean.valueOf(gioiTinh = "true")) {
                sex = false;
            } else  {
                sex = true;
            }*/
            try {
                ps = con.prepareStatement(query);
                ps.setString(1, maNV);
                ps.setString(2, ten);
                ps.setString(3, gioiTinh);
                ps.setString(4, ngaySinh);
                ps.setString(5, SDT);
                ps.setString(6, diaChi);
                ps.setString(7, email);
                ps.setString(8, cccd);
                ps.setString(9, chucVu);
                ps.setInt(10, Integer.valueOf(trangThai));
                int result = ps.executeUpdate();
                if (result > 0) {
                    insertedRows++;

                }

            } catch (Exception e) {
                e.printStackTrace(System.out);
            }
        }

        MsgBox.alert(this, "Thêm dữ liệu thành công!");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportExcelNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportExcelNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportExcelNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportExcelNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportExcelNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.suportSwing.MyButton btnBack;
    private com.raven.suportSwing.MyButton btnImportExcel;
    private com.raven.suportSwing.MyButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.raven.suportSwing.TableColumn tbExcel;
    // End of variables declaration//GEN-END:variables
}
